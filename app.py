from flask import Flask, request
import json
import requests
from config import TOKEN, CONFIRMATION_TOKEN, SECRET_KEY, API_VERSION

app = Flask(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
with open("qa_data.json", "r", encoding="utf-8") as f:
    qa_data = json.load(f)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã—Ö —Å–ª–æ–≤
with open("badwords.txt", "r", encoding="utf-8") as f:
    bad_words = set(line.strip().lower() for line in f if line.strip())

# –§–∏–ª—å—Ç—Ä –º–∞—Ç–∞
def contains_bad_words(text):
    return any(bad_word in text.lower() for bad_word in bad_words)

# –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞
def get_answer(message):
    msg = message.lower()
    for question in qa_data:
        if question in msg:
            return qa_data[question]

    # –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–µ "–¥–∞/–Ω–µ—Ç" –≤–æ–ø—Ä–æ—Å—ã
    if msg.endswith("?") and any(word in msg for word in ["–≤–æ–∑–º–æ–∂–Ω–æ", "–º–æ–∂–Ω–æ", "–º–æ–≥—É", "–¥–æ—Å—Ç—É–ø–Ω–æ", "—Ä–∞–∑—Ä–µ—à–µ–Ω–æ"]):
        return "–î–∞."

    return None

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def send_message(user_id, message):
    params = {
        "user_id": user_id,
        "message": message,
        "random_id": 0,
        "access_token": TOKEN,
        "v": API_VERSION
    }
    requests.post("https://api.vk.com/method/messages.send", params=params)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç VK
@app.route("/", methods=["POST"])
def vk_webhook():
    data = request.json

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
    if data["type"] == "confirmation":
        return CONFIRMATION_TOKEN

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞
    if "secret" in data and data["secret"] != SECRET_KEY:
        return "invalid secret"

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if data["type"] == "message_new":
        user_id = data["object"]["message"]["from_id"]
        message = data["object"]["message"]["text"]

        if contains_bad_words(message):
            send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è.")
        else:
            response = get_answer(message)
            if response:
                send_message(user_id, response)
            else:
                send_message(user_id,
                    "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ üòï\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ: https://edu.vk.com/projects –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")

    return "ok"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app.run(port=5000)
